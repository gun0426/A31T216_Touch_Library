<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\app.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\app.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Tue Aug 24 13:27:26 2021
<BR><P>
<H3>Maximum Stack Usage =        128 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; DBG_Do_Task &rArr; DBG_Send_Data &rArr; HAL_UART_Transmit &rArr; HAL_DMA_Start
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[ec]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">NMI_Handler</a><BR>
 <LI><a href="#[2e]">HardFault_HandlerC</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2e]">HardFault_HandlerC</a><BR>
 <LI><a href="#[8]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">SVC_Handler</a><BR>
 <LI><a href="#[9]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">PendSV_Handler</a><BR>
 <LI><a href="#[21]">NULL_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">NULL_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1d]">ADC_IRQHandler</a> from a31t21x_startup_arm.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[27]">CRC_IRQHandler</a> from a31t21x_startup_arm.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[e]">GPIOAB_IRQHandler</a> from a31t21x_gpio.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[f]">GPIOCD_IRQHandler</a> from a31t21x_gpio.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[10]">GPIOE_IRQHandler</a> from a31t21x_gpio.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[11]">GPIOF_IRQHandler</a> from a31t21x_gpio.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from a31t21x_startup_arm.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[2e]">HardFault_HandlerC</a> from a31t21x_startup_arm.o(.text) referenced from a31t21x_startup_arm.o(.text)
 <LI><a href="#[15]">I2C0_IRQHandler</a> from a31t21x_startup_arm.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[19]">I2C1_IRQHandler</a> from a31t21x_startup_arm.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[25]">LED_IRQHandler</a> from a31t21x_led.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[b]">LVI_IRQHandler</a> from a31t21x_pwr.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from a31t21x_startup_arm.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[21]">NULL_IRQHandler</a> from a31t21x_startup_arm.o(.text) referenced 4 times from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from a31t21x_startup_arm.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from a31t21x_startup_arm.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[22]">SPI20_IRQHandler</a> from a31t21x_startup_arm.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[23]">SPI21_IRQHandler</a> from a31t21x_startup_arm.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from a31t21x_startup_arm.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[c]">SYSCLKFAIL_IRQHandler</a> from a31t21x_scu.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from user_timer.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[2c]">SystemInit</a> from a31t21x_system.o(.text) referenced from a31t21x_startup_arm.o(.text)
 <LI><a href="#[12]">TIMER10_IRQHandler</a> from a31t21x_timer.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[13]">TIMER11_IRQHandler</a> from a31t21x_timer.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[14]">TIMER12_IRQHandler</a> from a31t21x_timer.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[20]">TIMER13_IRQHandler</a> from a31t21x_timer.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[1a]">TIMER20_IRQHandler</a> from a31t21x_timer.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[1b]">TIMER21_IRQHandler</a> from a31t21x_timer.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[18]">TIMER30_IRQHandler</a> from a31t21x_startup_arm.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[26]">TOUCH_IRQHandler</a> from touch.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[24]">TSENSE_IRQHandler</a> from a31t21x_startup_arm.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[28]">TS_User_Filter</a> from user.o(.text) referenced from main.o(.text)
 <LI><a href="#[1e]">UART0_IRQHandler</a> from a31t21x_uart.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[1f]">UART1_IRQHandler</a> from a31t21x_uart.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[16]">USART10_IRQHandler</a> from a31t21x_usart1n.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[1c]">USART11_IRQHandler</a> from a31t21x_usart1n.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[d]">WDT_IRQHandler</a> from a31t21x_startup_arm.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[2f]">WDT_IRQHandlerC</a> from a31t21x_wdt.o(.text) referenced from a31t21x_startup_arm.o(.text)
 <LI><a href="#[17]">WT_IRQHandler</a> from a31t21x_startup_arm.o(.text) referenced from a31t21x_startup_arm.o(RESET)
 <LI><a href="#[30]">__main</a> from __main.o(!!!main) referenced from a31t21x_startup_arm.o(.text)
 <LI><a href="#[2b]">app_led_irq_handler</a> from led_driver.o(.text) referenced from led_driver.o(.text)
 <LI><a href="#[2a]">app_uart_irq_handler</a> from debug.o(.text) referenced from debug.o(.text)
 <LI><a href="#[29]">led_RenewData</a> from user.o(.text) referenced from main.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[30]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[31]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[33]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[ef]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[f0]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[34]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[f1]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[38]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[f2]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[f3]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[f4]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[f5]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[f6]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[f7]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[f8]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[f9]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[fa]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[fb]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[fc]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[fd]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[fe]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[ff]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[100]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[101]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[102]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[103]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[104]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[105]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[106]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[3d]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[107]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[108]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[109]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[10a]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[10b]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[10c]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[32]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[10d]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[35]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[37]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[10e]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[39]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; DBG_Do_Task &rArr; DBG_Send_Data &rArr; HAL_UART_Transmit &rArr; HAL_DMA_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[10f]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[ee]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[3c]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[110]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[3e]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[83]"></a>__aeabi_memcpy4</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Set_Actv_Time
</UL>

<P><STRONG><a name="[111]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text), UNUSED)

<P><STRONG><a name="[42]"></a>SysTick_Configure</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[6c]"></a>Init_Library</STRONG> (Thumb, 180 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[44]"></a>Set_TS_IO</STRONG> (Thumb, 264 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Set_TS_IO &rArr; HAL_GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_SetMode
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_SetFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>Set_Library</STRONG> (Thumb, 212 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Set_Library &rArr; LED_Set_Actv_Time &rArr; HAL_LED_Init &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UT_Run_Timer
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Set_Sum_Count
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Set_Shield
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Set_Reverse_Time
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Set_Reverse_Rate
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Set_Release_Rate
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Set_NoiseTHD_Rate
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Set_Mode
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Set_Init_Delay
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Set_Inact_Port
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Set_IIR
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Set_Hisense_Level
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Set_Debounce
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Set_Comp_RefV
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Set_Common_THD
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Set_CH_THD
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Set_Base_Tracking
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Set_BaseHold_Rate
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Set_Current
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Set_Actv_Time
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_Set_Baudrate
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5d]"></a>Change_SysClock</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Change_SysClock &rArr; HAL_SCU_UpdateMainClock &rArr; SCU_ClockEnable &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_UpdateMainClock
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_LPM_Entry
</UL>

<P><STRONG><a name="[60]"></a>Check_LPM_Entry</STRONG> (Thumb, 666 bytes, Stack size 16 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UT_Set_Timer
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UT_Is_Expired
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UT_Get_Status
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_WDT_Start
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_WDT_Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_EnableWakeupSource
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_EnableClock
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_DisableResetSource
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWR_EnterDeepSleepMode
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_SysClock
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>

<P><STRONG><a name="[3a]"></a>main</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = main &rArr; DBG_Do_Task &rArr; DBG_Send_Data &rArr; HAL_UART_Transmit &rArr; HAL_DMA_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Do_Task
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Setting_Config
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Port_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Do_Task
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_Do_Task
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_SysClock
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Library
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_TS_IO
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Library
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[6b]"></a>System_Setting_Config</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, a31t21x_system_setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = System_Setting_Config &rArr; HAL_SCU_UpdateMainClock &rArr; SCU_ClockEnable &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_SetPLLConfig
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_UpdateMainClock
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6a]"></a>Port_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, a31t21x_port_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Port_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[72]"></a>Port_Configure_CLKO</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, a31t21x_port_init.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_EnableClockOut
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_SetMode
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_SetFunction
</UL>

<P><STRONG><a name="[74]"></a>Port_Configure_UART</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, a31t21x_port_init.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_SetPull
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_SetMode
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_SetFunction
</UL>

<P><STRONG><a name="[2a]"></a>app_uart_irq_handler</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, debug.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_uart_irq_handler &rArr; HAL_UART_Receive &rArr; HAL_DMA_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> debug.o(.text)
</UL>
<P><STRONG><a name="[5b]"></a>DBG_Set_Baudrate</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, debug.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Library
</UL>

<P><STRONG><a name="[77]"></a>DBG_Init_UART</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, debug.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DBG_Init_UART &rArr; HAL_UART_Receive &rArr; HAL_DMA_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_SetPull
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_SetMode
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_SetFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_Do_Task
</UL>

<P><STRONG><a name="[7f]"></a>DBG_Init_UART_Param</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, debug.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_Do_Task
</UL>

<P><STRONG><a name="[81]"></a>Hexstr_To_Binary</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, debug.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_Do_Task
</UL>

<P><STRONG><a name="[79]"></a>DBG_RX_Check</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, debug.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DBG_RX_Check
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_Do_Task
</UL>

<P><STRONG><a name="[80]"></a>DBG_Init_Variable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, debug.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_Do_Task
</UL>

<P><STRONG><a name="[7b]"></a>Make_Packet_Byte</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, debug.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_Send_Data
</UL>

<P><STRONG><a name="[7c]"></a>Make_Packet_Word</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, debug.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Make_Packet_Word
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_Send_Data
</UL>

<P><STRONG><a name="[7a]"></a>DBG_Send_Data</STRONG> (Thumb, 612 bytes, Stack size 24 bytes, debug.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DBG_Send_Data &rArr; HAL_UART_Transmit &rArr; HAL_DMA_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Make_Packet_Word
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Make_Packet_Byte
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_Do_Task
</UL>

<P><STRONG><a name="[6f]"></a>DBG_Do_Task</STRONG> (Thumb, 380 bytes, Stack size 24 bytes, debug.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = DBG_Do_Task &rArr; DBG_Send_Data &rArr; HAL_UART_Transmit &rArr; HAL_DMA_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_Send_Data
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_Init_Variable
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_RX_Check
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hexstr_To_Binary
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_Init_UART_Param
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_Init_UART
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2b]"></a>app_led_irq_handler</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, led_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_led_irq_handler &rArr; TS_Start_Touch
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Start_Touch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> led_driver.o(.text)
</UL>
<P><STRONG><a name="[5a]"></a>LED_Set_Actv_Time</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, led_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LED_Set_Actv_Time &rArr; HAL_LED_Init &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LED_Init
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Library
</UL>

<P><STRONG><a name="[59]"></a>LED_Set_Current</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, led_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Library
</UL>

<P><STRONG><a name="[85]"></a>LED_Init_IO</STRONG> (Thumb, 288 bytes, Stack size 8 bytes, led_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LED_Init_IO &rArr; HAL_GPIO_SetPin
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_SetPin
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Do_Task
</UL>

<P><STRONG><a name="[87]"></a>LED_Init_Reg</STRONG> (Thumb, 534 bytes, Stack size 8 bytes, led_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LED_Init_Reg &rArr; HAL_GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_SetMode
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_SetFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Do_Task
</UL>

<P><STRONG><a name="[6d]"></a>LED_Do_Task</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, led_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LED_Do_Task &rArr; LED_Init_Reg &rArr; HAL_GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init_Reg
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init_IO
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[29]"></a>led_RenewData</STRONG> (Thumb, 244 bytes, Stack size 68 bytes, user.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = led_RenewData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[89]"></a>get_max</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, user.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = get_max
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_User_Filter
</UL>

<P><STRONG><a name="[28]"></a>TS_User_Filter</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, user.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TS_User_Filter &rArr; get_max
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_max
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[2c]"></a>SystemInit</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, a31t21x_system.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(.text)
</UL>
<P><STRONG><a name="[112]"></a>SystemDelay</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, a31t21x_system.o(.text), UNUSED)

<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, a31t21x_startup_arm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, a31t21x_startup_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>HardFault_HandlerC</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, a31t21x_startup_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_HandlerC
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_HandlerC
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(.text)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, a31t21x_startup_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, a31t21x_startup_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>WDT_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, a31t21x_startup_arm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, a31t21x_startup_arm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>CRC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, a31t21x_startup_arm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, a31t21x_startup_arm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, a31t21x_startup_arm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>SPI20_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, a31t21x_startup_arm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>SPI21_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, a31t21x_startup_arm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIMER30_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, a31t21x_startup_arm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TSENSE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, a31t21x_startup_arm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>WT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, a31t21x_startup_arm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[ec]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, a31t21x_startup_arm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[c1]"></a>HAL_DMA_Init</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, a31t21x_dma.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART_SetReceiveDMA
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART_SetTransmitDMA
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_SetReceiveDMA
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_SetTransmitDMA
</UL>

<P><STRONG><a name="[113]"></a>HAL_DMA_Deinit</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, a31t21x_dma.o(.text), UNUSED)

<P><STRONG><a name="[8a]"></a>HAL_DMA_Setup</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, a31t21x_dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_REG
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART_SetReceiveDMA
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART_SetTransmitDMA
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_SetReceiveDMA
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_SetTransmitDMA
</UL>

<P><STRONG><a name="[c2]"></a>HAL_DMA_Clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, a31t21x_dma.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART_SetReceiveDMA
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART_SetTransmitDMA
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_SetReceiveDMA
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_SetTransmitDMA
</UL>

<P><STRONG><a name="[8c]"></a>HAL_DMA_Start</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, a31t21x_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_DMA_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_REG
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART_Receive
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART_Transmit
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART_Transfer
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive
</UL>

<P><STRONG><a name="[8d]"></a>HAL_DMA_Stop</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, a31t21x_dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_REG
</UL>

<P><STRONG><a name="[8e]"></a>HAL_GPIO_SetIRQHandler</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, a31t21x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EmptySlot
</UL>

<P><STRONG><a name="[71]"></a>HAL_GPIO_Init</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, a31t21x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_REG
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Port_Init
</UL>

<P><STRONG><a name="[46]"></a>HAL_GPIO_SetMode</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, a31t21x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_REG
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init_Reg
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_Init_UART
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Port_Configure_UART
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Port_Configure_CLKO
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Set_Shield
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_TS_IO
</UL>

<P><STRONG><a name="[45]"></a>HAL_GPIO_SetFunction</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, a31t21x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_GPIO_SetFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_REG
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init_Reg
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_Init_UART
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Port_Configure_UART
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Port_Configure_CLKO
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Set_Shield
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_TS_IO
</UL>

<P><STRONG><a name="[94]"></a>HAL_GPIO_SetOutput</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, a31t21x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_REG
</UL>

<P><STRONG><a name="[75]"></a>HAL_GPIO_SetPull</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, a31t21x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_GPIO_SetPull
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_REG
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_Init_UART
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Port_Configure_UART
</UL>

<P><STRONG><a name="[95]"></a>HAL_GPIO_SetDebounce</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, a31t21x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_REG
</UL>

<P><STRONG><a name="[96]"></a>HAL_GPIO_SetDebounceClock</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, a31t21x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>

<P><STRONG><a name="[86]"></a>HAL_GPIO_SetPin</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, a31t21x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_GPIO_SetPin
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_REG
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init_IO
</UL>

<P><STRONG><a name="[97]"></a>HAL_GPIO_ClearPin</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, a31t21x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_REG
</UL>

<P><STRONG><a name="[98]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, a31t21x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_REG
</UL>

<P><STRONG><a name="[99]"></a>HAL_GPIO_WritePort</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, a31t21x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_REG
</UL>

<P><STRONG><a name="[9a]"></a>HAL_GPIO_ReadPort</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, a31t21x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_REG
</UL>

<P><STRONG><a name="[9b]"></a>HAL_GPIO_EnableIRQ</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, a31t21x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_REG
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetupIRQ
</UL>

<P><STRONG><a name="[9c]"></a>HAL_GPIO_DisableIRQ</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, a31t21x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_IRQ_NUM
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_REG
</UL>

<P><STRONG><a name="[e]"></a>GPIOAB_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, a31t21x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIOAB_IRQHandler &rArr; GPIO_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>GPIOCD_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, a31t21x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIOCD_IRQHandler &rArr; GPIO_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>GPIOE_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, a31t21x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIOE_IRQHandler &rArr; GPIO_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>GPIOF_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, a31t21x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIOF_IRQHandler &rArr; GPIO_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>HAL_LED_Init</STRONG> (Thumb, 320 bytes, Stack size 16 bytes, a31t21x_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_LED_Init &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Set_Actv_Time
</UL>

<P><STRONG><a name="[114]"></a>HAL_LED_DISP_ON</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, a31t21x_led.o(.text), UNUSED)

<P><STRONG><a name="[115]"></a>HAL_LED_DISP_OFF</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, a31t21x_led.o(.text), UNUSED)

<P><STRONG><a name="[116]"></a>HAL_LED_SetClock</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, a31t21x_led.o(.text), UNUSED)

<P><STRONG><a name="[25]"></a>LED_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, a31t21x_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LED_IRQHandler &rArr; LED_IRQHandlerC
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_IRQHandlerC
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[a1]"></a>HAL_LVR_Deinit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, a31t21x_pwr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_SYSTEM_Configure
</UL>

<P><STRONG><a name="[a2]"></a>HAL_LVI_Init</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, a31t21x_pwr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>

<P><STRONG><a name="[117]"></a>HAL_LVI_Deinit</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, a31t21x_pwr.o(.text), UNUSED)

<P><STRONG><a name="[118]"></a>HAL_LVR_Init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, a31t21x_pwr.o(.text), UNUSED)

<P><STRONG><a name="[119]"></a>HAL_PWR_EnterSleepMode</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, a31t21x_pwr.o(.text), UNUSED)

<P><STRONG><a name="[66]"></a>HAL_PWR_EnterDeepSleepMode</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, a31t21x_pwr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_SYSTEM_Configure
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_LPM_Entry
</UL>

<P><STRONG><a name="[b]"></a>LVI_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, a31t21x_pwr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LVI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>HAL_SCU_UpdateMainClock</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, a31t21x_scu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_SCU_UpdateMainClock &rArr; SCU_ClockEnable &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClockEnable
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_FlashLatencySet
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Setting_Config
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_SysClock
</UL>

<P><STRONG><a name="[70]"></a>HAL_SCU_SetPLLConfig</STRONG> (Thumb, 350 bytes, Stack size 32 bytes, a31t21x_scu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_SCU_SetPLLConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Setting_Config
</UL>

<P><STRONG><a name="[61]"></a>HAL_SCU_EnableClock</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, a31t21x_scu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_LPM_Entry
</UL>

<P><STRONG><a name="[11a]"></a>HAL_SCU_DisableClock</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, a31t21x_scu.o(.text), UNUSED)

<P><STRONG><a name="[a6]"></a>HAL_SCU_EnableClockMonitor</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, a31t21x_scu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>

<P><STRONG><a name="[11b]"></a>HAL_SCU_DisableClockMonitor</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, a31t21x_scu.o(.text), UNUSED)

<P><STRONG><a name="[73]"></a>HAL_SCU_EnableClockOut</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, a31t21x_scu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Port_Configure_CLKO
</UL>

<P><STRONG><a name="[11c]"></a>HAL_SCU_DisableClockOut</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, a31t21x_scu.o(.text), UNUSED)

<P><STRONG><a name="[63]"></a>HAL_SCU_EnableWakeupSource</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, a31t21x_scu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_LPM_Entry
</UL>

<P><STRONG><a name="[11d]"></a>HAL_SCU_DisableWakeupSource</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, a31t21x_scu.o(.text), UNUSED)

<P><STRONG><a name="[11e]"></a>HAL_SCU_EnableResetSource</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, a31t21x_scu.o(.text), UNUSED)

<P><STRONG><a name="[62]"></a>HAL_SCU_DisableResetSource</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, a31t21x_scu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_LPM_Entry
</UL>

<P><STRONG><a name="[11f]"></a>HAL_SCU_GetResetReason</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, a31t21x_scu.o(.text), UNUSED)

<P><STRONG><a name="[120]"></a>HAL_SCU_GetWakeupReason</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, a31t21x_scu.o(.text), UNUSED)

<P><STRONG><a name="[121]"></a>HAL_SCU_Timer1n_ClockConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, a31t21x_scu.o(.text), UNUSED)

<P><STRONG><a name="[122]"></a>HAL_SCU_Timer20_ClockConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, a31t21x_scu.o(.text), UNUSED)

<P><STRONG><a name="[123]"></a>HAL_SCU_Timer30_ClockConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, a31t21x_scu.o(.text), UNUSED)

<P><STRONG><a name="[124]"></a>HAL_SCU_LED_ClockConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, a31t21x_scu.o(.text), UNUSED)

<P><STRONG><a name="[125]"></a>HAL_SCU_WT_ClockConfig</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, a31t21x_scu.o(.text), UNUSED)

<P><STRONG><a name="[126]"></a>HAL_SCU_WDT_ClockConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, a31t21x_scu.o(.text), UNUSED)

<P><STRONG><a name="[127]"></a>HAL_SCU_LCD_ClockConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, a31t21x_scu.o(.text), UNUSED)

<P><STRONG><a name="[c]"></a>SYSCLKFAIL_IRQHandler</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, a31t21x_scu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SYSCLKFAIL_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[a8]"></a>HAL_TIMER_Deinit</STRONG> (Thumb, 254 bytes, Stack size 16 bytes, a31t21x_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_IRQ_NUM
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMER_Init
</UL>

<P><STRONG><a name="[aa]"></a>HAL_TIMER_Init</STRONG> (Thumb, 482 bytes, Stack size 48 bytes, a31t21x_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMER_Deinit
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Configure
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_IRQ_NUM
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_REG
</UL>

<P><STRONG><a name="[ae]"></a>HAL_TIMER_GetStatus</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, a31t21x_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_REG
</UL>

<P><STRONG><a name="[af]"></a>HAL_TIMER_Start</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, a31t21x_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_REG
</UL>

<P><STRONG><a name="[b0]"></a>HAL_TIMER_StartPWM</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, a31t21x_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_REG
</UL>

<P><STRONG><a name="[b1]"></a>HAL_TIMER_StartCapture</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, a31t21x_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_REG
</UL>

<P><STRONG><a name="[b2]"></a>HAL_TIMER_Stop</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, a31t21x_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_REG
</UL>

<P><STRONG><a name="[b3]"></a>HAL_TIMER_GetCount</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, a31t21x_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_REG
</UL>

<P><STRONG><a name="[b4]"></a>HAL_TIMER_ClearCount</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, a31t21x_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_REG
</UL>

<P><STRONG><a name="[b5]"></a>HAL_TIMER_GetCaptureCount</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, a31t21x_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_REG
</UL>

<P><STRONG><a name="[b6]"></a>HAL_TIMER_SetClock</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, a31t21x_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_REG
</UL>

<P><STRONG><a name="[b7]"></a>HAL_TIMER_SetIRQ</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, a31t21x_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_REG
</UL>

<P><STRONG><a name="[12]"></a>TIMER10_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, a31t21x_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIMER10_IRQHandler &rArr; TIMER_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIMER11_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, a31t21x_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIMER11_IRQHandler &rArr; TIMER_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIMER12_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, a31t21x_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIMER12_IRQHandler &rArr; TIMER_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TIMER13_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, a31t21x_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIMER13_IRQHandler &rArr; TIMER_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIMER20_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, a31t21x_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIMER20_IRQHandler &rArr; TIMER_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIMER21_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, a31t21x_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIMER21_IRQHandler &rArr; TIMER_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[ba]"></a>HAL_UART_Deinit</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, a31t21x_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_UART_Deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IRQ_NUM
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[78]"></a>HAL_UART_Init</STRONG> (Thumb, 304 bytes, Stack size 48 bytes, a31t21x_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_UART_Init &rArr; UART_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Deinit
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IRQ_NUM
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_REG
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configure
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_Init_UART
</UL>

<P><STRONG><a name="[7e]"></a>HAL_UART_Transmit</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, a31t21x_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_UART_Transmit &rArr; HAL_DMA_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_REG
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_Send_Data
</UL>

<P><STRONG><a name="[76]"></a>HAL_UART_Receive</STRONG> (Thumb, 238 bytes, Stack size 48 bytes, a31t21x_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_UART_Receive &rArr; HAL_DMA_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_REG
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_Init_UART
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_irq_handler
</UL>

<P><STRONG><a name="[bf]"></a>HAL_UART_Abort</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, a31t21x_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_REG
</UL>

<P><STRONG><a name="[c0]"></a>HAL_UART_SetTransmitDMA</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, a31t21x_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Clear
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Setup
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
</UL>

<P><STRONG><a name="[c3]"></a>HAL_UART_SetReceiveDMA</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, a31t21x_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Clear
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Setup
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
</UL>

<P><STRONG><a name="[c4]"></a>HAL_UART_GetBusyStatus</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, a31t21x_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_REG
</UL>

<P><STRONG><a name="[c5]"></a>HAL_UART_GetLineStatus</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, a31t21x_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_REG
</UL>

<P><STRONG><a name="[c6]"></a>HAL_UART_SetIFDelay</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, a31t21x_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_REG
</UL>

<P><STRONG><a name="[c7]"></a>HAL_UART_SetIRQ</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, a31t21x_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_REG
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>

<P><STRONG><a name="[1e]"></a>UART0_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, a31t21x_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART0_IRQHandler &rArr; UART_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>UART1_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, a31t21x_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART1_IRQHandler &rArr; UART_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[ca]"></a>HAL_USART_Deinit</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, a31t21x_usart1n.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_IRQ_NUM
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART_Init
</UL>

<P><STRONG><a name="[cc]"></a>HAL_USART_Init</STRONG> (Thumb, 268 bytes, Stack size 40 bytes, a31t21x_usart1n.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART_Deinit
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_IRQ_NUM
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_REG
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Configure
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[cf]"></a>HAL_USART_Transfer</STRONG> (Thumb, 500 bytes, Stack size 40 bytes, a31t21x_usart1n.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_StatusCheck
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_REG
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART_Receive
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART_Transmit
</UL>

<P><STRONG><a name="[d1]"></a>HAL_USART_Transmit</STRONG> (Thumb, 184 bytes, Stack size 48 bytes, a31t21x_usart1n.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART_Transfer
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_REG
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start
</UL>

<P><STRONG><a name="[d2]"></a>HAL_USART_Receive</STRONG> (Thumb, 190 bytes, Stack size 48 bytes, a31t21x_usart1n.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART_Transfer
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_REG
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start
</UL>

<P><STRONG><a name="[d3]"></a>HAL_USART_SetTransmitDMA</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, a31t21x_usart1n.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Clear
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Setup
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
</UL>

<P><STRONG><a name="[d4]"></a>HAL_USART_SetReceiveDMA</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, a31t21x_usart1n.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Clear
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Setup
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
</UL>

<P><STRONG><a name="[d5]"></a>HAL_USART_GetBusyStatus</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, a31t21x_usart1n.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_REG
</UL>

<P><STRONG><a name="[d6]"></a>HAL_USART_GetLineStatus</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, a31t21x_usart1n.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_REG
</UL>

<P><STRONG><a name="[d7]"></a>HAL_USART_SetIRQ</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, a31t21x_usart1n.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_REG
</UL>

<P><STRONG><a name="[16]"></a>USART10_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, a31t21x_usart1n.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USART10_IRQHandler &rArr; USART_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>USART11_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, a31t21x_usart1n.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USART11_IRQHandler &rArr; USART_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>HAL_WDT_Init</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, a31t21x_wdt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Configure
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_LPM_Entry
</UL>

<P><STRONG><a name="[128]"></a>HAL_WDT_Deinit</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, a31t21x_wdt.o(.text), UNUSED)

<P><STRONG><a name="[65]"></a>HAL_WDT_Start</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, a31t21x_wdt.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_LPM_Entry
</UL>

<P><STRONG><a name="[129]"></a>HAL_WDT_Stop</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, a31t21x_wdt.o(.text), UNUSED)

<P><STRONG><a name="[12a]"></a>HAL_WDT_Feed</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, a31t21x_wdt.o(.text), UNUSED)

<P><STRONG><a name="[12b]"></a>HAL_WDT_GetCounter</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, a31t21x_wdt.o(.text), UNUSED)

<P><STRONG><a name="[db]"></a>HAL_WDT_ClearStatus</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, a31t21x_wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_IRQHandlerC
</UL>

<P><STRONG><a name="[12c]"></a>HAL_WDT_SetClock</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, a31t21x_wdt.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>WDT_IRQHandlerC</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, a31t21x_wdt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WDT_IRQHandlerC
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_WDT_ClearStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(.text)
</UL>
<P><STRONG><a name="[26]"></a>TOUCH_IRQHandler</STRONG> (Thumb, 248 bytes, Stack size 8 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TOUCH_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>TS_Set_Mode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, touch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Library
</UL>

<P><STRONG><a name="[4b]"></a>TS_Set_Shield</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TS_Set_Shield &rArr; HAL_GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_SetMode
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_SetFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Library
</UL>

<P><STRONG><a name="[4c]"></a>TS_Set_Sum_Count</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, touch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Library
</UL>

<P><STRONG><a name="[4e]"></a>TS_Set_Common_THD</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, touch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Library
</UL>

<P><STRONG><a name="[4f]"></a>TS_Set_CH_THD</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, touch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Library
</UL>

<P><STRONG><a name="[50]"></a>TS_Set_NoiseTHD_Rate</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, touch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Library
</UL>

<P><STRONG><a name="[51]"></a>TS_Set_BaseHold_Rate</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, touch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Library
</UL>

<P><STRONG><a name="[52]"></a>TS_Set_Base_Tracking</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, touch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Library
</UL>

<P><STRONG><a name="[53]"></a>TS_Set_Release_Rate</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, touch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Library
</UL>

<P><STRONG><a name="[54]"></a>TS_Set_Reverse_Rate</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, touch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Library
</UL>

<P><STRONG><a name="[55]"></a>TS_Set_Reverse_Time</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, touch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Library
</UL>

<P><STRONG><a name="[56]"></a>TS_Set_Debounce</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, touch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Library
</UL>

<P><STRONG><a name="[57]"></a>TS_Set_IIR</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, touch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Library
</UL>

<P><STRONG><a name="[58]"></a>TS_Set_Init_Delay</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, touch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Library
</UL>

<P><STRONG><a name="[4d]"></a>TS_Set_Inact_Port</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, touch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Library
</UL>

<P><STRONG><a name="[4a]"></a>TS_Set_Comp_RefV</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TS_Set_Comp_RefV &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Library
</UL>

<P><STRONG><a name="[49]"></a>TS_Set_Hisense_Level</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TS_Set_Hisense_Level &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Library
</UL>

<P><STRONG><a name="[12d]"></a>TS_Get_Key</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, touch.o(.text), UNUSED)

<P><STRONG><a name="[e4]"></a>TS_Init_Variable</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, touch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Do_Task
</UL>

<P><STRONG><a name="[e5]"></a>TS_Init_Register</STRONG> (Thumb, 220 bytes, Stack size 12 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TS_Init_Register
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Do_Task
</UL>

<P><STRONG><a name="[de]"></a>TS_Get_Single_CH</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TS_Get_Single_CH
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Config_Mode
</UL>

<P><STRONG><a name="[82]"></a>TS_Start_Touch</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TS_Start_Touch
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_irq_handler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Do_Task
</UL>

<P><STRONG><a name="[dd]"></a>TS_Config_Mode</STRONG> (Thumb, 656 bytes, Stack size 12 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TS_Config_Mode &rArr; TS_Get_Single_CH
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Get_Single_CH
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Do_Task
</UL>

<P><STRONG><a name="[df]"></a>TS_Init_Base</STRONG> (Thumb, 174 bytes, Stack size 8 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TS_Init_Base &rArr; UT_Is_Expired
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UT_Set_Timer
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UT_Is_Expired
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UT_Get_Status
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Do_Task
</UL>

<P><STRONG><a name="[e0]"></a>TS_Update_Base</STRONG> (Thumb, 566 bytes, Stack size 24 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TS_Update_Base &rArr; UT_Is_Expired
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UT_Set_Timer
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UT_Is_Expired
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UT_Get_Status
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Do_Task
</UL>

<P><STRONG><a name="[e1]"></a>TS_Make_Data</STRONG> (Thumb, 338 bytes, Stack size 24 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TS_Make_Data
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Do_Task
</UL>

<P><STRONG><a name="[e2]"></a>TS_Judge_Key</STRONG> (Thumb, 642 bytes, Stack size 16 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TS_Judge_Key &rArr; UT_Is_Expired
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UT_Set_Timer
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UT_Is_Expired
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UT_Clear_Timer
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Do_Task
</UL>

<P><STRONG><a name="[6e]"></a>TS_Do_Task</STRONG> (Thumb, 832 bytes, Stack size 8 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TS_Do_Task &rArr; TS_Update_Base &rArr; UT_Is_Expired
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Start_Touch
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Judge_Key
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Make_Data
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Update_Base
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Init_Base
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Config_Mode
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Init_Register
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Init_Variable
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>UT_Run_Timer</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, user_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Library
</UL>

<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, user_timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>UT_Set_Timer</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, user_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UT_Set_Timer
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_LPM_Entry
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Judge_Key
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Update_Base
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Init_Base
</UL>

<P><STRONG><a name="[67]"></a>UT_Get_Status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, user_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_LPM_Entry
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Update_Base
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Init_Base
</UL>

<P><STRONG><a name="[e3]"></a>UT_Clear_Timer</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, user_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UT_Is_Expired
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Judge_Key
</UL>

<P><STRONG><a name="[68]"></a>UT_Is_Expired</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, user_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UT_Is_Expired
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UT_Check_Expire
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UT_Clear_Timer
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_LPM_Entry
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Judge_Key
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Update_Base
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Init_Base
</UL>

<P><STRONG><a name="[e8]"></a>_memset_w</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[e7]"></a>_memset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[e9]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[12e]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[bd]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART_Init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[12f]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[ea]"></a>__rt_memclr_w</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[130]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[43]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Configure
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configure
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClockEnable
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_RX_Check
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_SetPLLConfig
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_User_Filter
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Setting_Config
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Set_Actv_Time
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_UpdateMainClock
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Configure
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Make_Data
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Update_Base
</UL>

<P><STRONG><a name="[131]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[7d]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_Send_Data
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_User_Filter
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Set_Hisense_Level
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Set_Comp_RefV
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Judge_Key
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Update_Base
</UL>

<P><STRONG><a name="[132]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[133]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[134]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[36]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[3b]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[135]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[eb]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[136]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[137]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[138]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, main.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Configure
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_SetIRQ
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_ClockEnable
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_SetDebounceClock
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Do_Task
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_SysClock
</UL>

<P><STRONG><a name="[139]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, indicate_semi.o(.text), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[41]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_LPM_Entry
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>

<P><STRONG><a name="[40]"></a>SysTick_Config</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Configure
</UL>

<P><STRONG><a name="[88]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, led_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init_Reg
</UL>

<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, a31t21x_startup_arm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>NULL_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, a31t21x_startup_arm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NULL_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NULL_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31t21x_startup_arm.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>DMA_REG</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, a31t21x_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Stop
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Setup
</UL>

<P><STRONG><a name="[8f]"></a>GPIO_EmptySlot</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, a31t21x_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_SetIRQHandler
</UL>

<P><STRONG><a name="[90]"></a>GPIO_SetupIRQ</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, a31t21x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_IRQ_NUM
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EnableIRQ
</UL>

<P><STRONG><a name="[9d]"></a>GPIO_Handler</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, a31t21x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIO_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_REG
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOF_IRQHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOE_IRQHandler
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOCD_IRQHandler
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOAB_IRQHandler
</UL>

<P><STRONG><a name="[92]"></a>__NVIC_SetPriority</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, a31t21x_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetupIRQ
</UL>

<P><STRONG><a name="[93]"></a>GPIO_REG</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, a31t21x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DisableIRQ
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EnableIRQ
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPort
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePort
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ClearPin
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_SetDebounce
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_SetOutput
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Handler
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_SetPin
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_SetPull
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_SetMode
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_SetFunction
</UL>

<P><STRONG><a name="[91]"></a>GPIO_IRQ_NUM</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, a31t21x_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DisableIRQ
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetupIRQ
</UL>

<P><STRONG><a name="[9f]"></a>LED_IRQHandlerC</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, a31t21x_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LED_IRQHandlerC
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_IRQHandler
</UL>

<P><STRONG><a name="[9e]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, a31t21x_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LED_Init
</UL>

<P><STRONG><a name="[a0]"></a>PWR_SYSTEM_Configure</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, a31t21x_pwr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LVR_Deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWR_EnterDeepSleepMode
</UL>

<P><STRONG><a name="[a3]"></a>__NVIC_SetPriority</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, a31t21x_pwr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LVI_Init
</UL>

<P><STRONG><a name="[a5]"></a>SCU_FlashLatencySet</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, a31t21x_scu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_UpdateMainClock
</UL>

<P><STRONG><a name="[a4]"></a>SCU_ClockEnable</STRONG> (Thumb, 414 bytes, Stack size 24 bytes, a31t21x_scu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SCU_ClockEnable &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_UpdateMainClock
</UL>

<P><STRONG><a name="[a7]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, a31t21x_scu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_EnableClockMonitor
</UL>

<P><STRONG><a name="[ab]"></a>TIMER_REG</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, a31t21x_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMER_SetIRQ
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMER_SetClock
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMER_GetCaptureCount
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMER_ClearCount
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMER_GetCount
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMER_Stop
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMER_StartCapture
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMER_StartPWM
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMER_Start
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMER_GetStatus
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMER_Init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_IRQHandler
</UL>

<P><STRONG><a name="[a9]"></a>TIMER_IRQ_NUM</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, a31t21x_timer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMER_Init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMER_Deinit
</UL>

<P><STRONG><a name="[ac]"></a>TIMER_Configure</STRONG> (Thumb, 164 bytes, Stack size 12 bytes, a31t21x_timer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMER_Init
</UL>

<P><STRONG><a name="[b8]"></a>TIMER_IRQHandler</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, a31t21x_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIMER_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_REG
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER21_IRQHandler
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER20_IRQHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER13_IRQHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER12_IRQHandler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER11_IRQHandler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER10_IRQHandler
</UL>

<P><STRONG><a name="[ad]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, a31t21x_timer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMER_Init
</UL>

<P><STRONG><a name="[b9]"></a>UART_Configure</STRONG> (Thumb, 222 bytes, Stack size 40 bytes, a31t21x_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[c8]"></a>UART_IRQHandler</STRONG> (Thumb, 362 bytes, Stack size 40 bytes, a31t21x_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_REG
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[be]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, a31t21x_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[bc]"></a>UART_REG</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, a31t21x_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_SetIRQ
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_SetIFDelay
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_GetLineStatus
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_GetBusyStatus
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Abort
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IRQHandler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[bb]"></a>UART_IRQ_NUM</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, a31t21x_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Deinit
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[c9]"></a>USART_Configure</STRONG> (Thumb, 786 bytes, Stack size 40 bytes, a31t21x_usart1n.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART_Init
</UL>

<P><STRONG><a name="[d8]"></a>USART_IRQHandler</STRONG> (Thumb, 776 bytes, Stack size 40 bytes, a31t21x_usart1n.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USART_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_StatusCheck
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_REG
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART11_IRQHandler
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART10_IRQHandler
</UL>

<P><STRONG><a name="[ce]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, a31t21x_usart1n.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART_Init
</UL>

<P><STRONG><a name="[cd]"></a>USART_REG</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, a31t21x_usart1n.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART_SetIRQ
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART_GetLineStatus
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART_GetBusyStatus
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART_Receive
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART_Transmit
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART_Transfer
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART_Init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_IRQHandler
</UL>

<P><STRONG><a name="[cb]"></a>USART_IRQ_NUM</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, a31t21x_usart1n.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART_Init
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART_Deinit
</UL>

<P><STRONG><a name="[d0]"></a>USART_StatusCheck</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, a31t21x_usart1n.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_USART_Transfer
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_IRQHandler
</UL>

<P><STRONG><a name="[d9]"></a>WDT_Configure</STRONG> (Thumb, 238 bytes, Stack size 16 bytes, a31t21x_wdt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_WDT_Init
</UL>

<P><STRONG><a name="[da]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, a31t21x_wdt.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Configure
</UL>

<P><STRONG><a name="[dc]"></a>__NVIC_DisableIRQ</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, touch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TOUCH_IRQHandler
</UL>

<P><STRONG><a name="[e6]"></a>UT_Check_Expire</STRONG> (Thumb, 372 bytes, Stack size 0 bytes, user_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UT_Is_Expired
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[ed]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
